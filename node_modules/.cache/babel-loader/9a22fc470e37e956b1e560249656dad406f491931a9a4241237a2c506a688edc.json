{"ast":null,"code":"var _jsxFileName = \"/home/naina/WebDev/honeycomb-questions/src/honeycomb.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HoneycombPlotGenerator = () => {\n  _s();\n  const [easy, setEasy] = useState(0);\n  const [medium, setMedium] = useState(0);\n  const [hard, setHard] = useState(0);\n  const [plotUrl, setPlotUrl] = useState('');\n  const generatePlot = async () => {\n    try {\n      const response = await axios.post('/generate_plot', {\n        easy,\n        medium,\n        hard\n      }, {\n        responseType: 'blob' // Important for handling binary data\n      });\n      const url = URL.createObjectURL(new Blob([response.data], {\n        type: 'image/png'\n      }));\n      setPlotUrl(url);\n    } catch (error) {\n      console.error('Error generating plot:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'green'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Generate Honeycomb Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        generatePlot();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Easy Questions:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: easy,\n          onChange: e => setEasy(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Medium Questions:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: medium,\n          onChange: e => setMedium(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Hard Questions:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: hard,\n          onChange: e => setHard(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Plot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), plotUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: plotUrl,\n      alt: \"Honeycomb Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(HoneycombPlotGenerator, \"4lCH4J+D6NMm6Mr3JekmwoegmRQ=\");\n_c = HoneycombPlotGenerator;\nexport default HoneycombPlotGenerator;\nvar _c;\n$RefreshReg$(_c, \"HoneycombPlotGenerator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","HoneycombPlotGenerator","_s","easy","setEasy","medium","setMedium","hard","setHard","plotUrl","setPlotUrl","generatePlot","response","post","responseType","url","URL","createObjectURL","Blob","data","type","error","console","style","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","value","onChange","Number","target","src","alt","_c","$RefreshReg$"],"sources":["/home/naina/WebDev/honeycomb-questions/src/honeycomb.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst HoneycombPlotGenerator = () => {\n  const [easy, setEasy] = useState(0);\n  const [medium, setMedium] = useState(0);\n  const [hard, setHard] = useState(0);\n  const [plotUrl, setPlotUrl] = useState('');\n\n  const generatePlot = async () => {\n    try {\n      const response = await axios.post('/generate_plot', { easy, medium, hard }, {\n        responseType: 'blob',  // Important for handling binary data\n      });\n\n      const url = URL.createObjectURL(new Blob([response.data], { type: 'image/png' }));\n      setPlotUrl(url);\n    } catch (error) {\n      console.error('Error generating plot:', error);\n    }\n  };\n\n  return (\n    <div style={{backgroundColor:'green'}}>\n      <h1>Generate Honeycomb Plot</h1>\n      <form onSubmit={(e) => { e.preventDefault(); generatePlot(); }}>\n        <label>\n          Easy Questions:\n          <input type=\"number\" value={easy} onChange={(e) => setEasy(Number(e.target.value))} />\n        </label>\n        <label>\n          Medium Questions:\n          <input type=\"number\" value={medium} onChange={(e) => setMedium(Number(e.target.value))} />\n        </label>\n        <label>\n          Hard Questions:\n          <input type=\"number\" value={hard} onChange={(e) => setHard(Number(e.target.value))} />\n        </label>\n        <button type=\"submit\">Generate Plot</button>\n      </form>\n      {plotUrl && <img src={plotUrl} alt=\"Honeycomb Plot\" />}\n    </div>\n  );\n};\n\nexport default HoneycombPlotGenerator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}