{"ast":null,"code":"var _jsxFileName = \"/home/naina/WebDev/honeycomb-questions/src/honeycomb.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Honeycomb = ({\n  easy_count,\n  medium_count,\n  hard_count\n}) => {\n  _s();\n  const [plotUrl, setPlotUrl] = useState('');\n  useEffect(() => {\n    const generatePlot = async () => {\n      try {\n        const response = await axios.post('/generate_plot', {\n          easy: easy_count,\n          medium: medium_count,\n          hard: hard_count\n        }, {\n          responseType: 'blob' // Important for handling binary data\n        });\n        const url = URL.createObjectURL(new Blob([response.data], {\n          type: 'image/png'\n        }));\n        setPlotUrl(url);\n      } catch (error) {\n        console.error('Error generating plot:', error);\n      }\n    };\n    generatePlot();\n  }, [easy_count, medium_count, hard_count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Honeycomb Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), plotUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: plotUrl,\n      alt: \"Honeycomb Plot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading plot...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 63\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Honeycomb, \"RaixlU+KLAp/CtAUyBnZs1j/rdQ=\");\n_c = Honeycomb;\nexport default Honeycomb;\nvar _c;\n$RefreshReg$(_c, \"Honeycomb\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Honeycomb","easy_count","medium_count","hard_count","_s","plotUrl","setPlotUrl","generatePlot","response","post","easy","medium","hard","responseType","url","URL","createObjectURL","Blob","data","type","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/home/naina/WebDev/honeycomb-questions/src/honeycomb.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Honeycomb = ({ easy_count, medium_count, hard_count }) => {\n  const [plotUrl, setPlotUrl] = useState('');\n\n  useEffect(() => {\n    const generatePlot = async () => {\n      try {\n        const response = await axios.post('/generate_plot', { easy: easy_count, medium: medium_count, hard: hard_count }, {\n          responseType: 'blob',  // Important for handling binary data\n        });\n\n        const url = URL.createObjectURL(new Blob([response.data], { type: 'image/png' }));\n        setPlotUrl(url);\n      } catch (error) {\n        console.error('Error generating plot:', error);\n      }\n    };\n\n    generatePlot();\n  }, [easy_count, medium_count, hard_count]);\n\n  return (\n    <div>\n      <h1>Honeycomb Plot</h1>\n      {plotUrl ? <img src={plotUrl} alt=\"Honeycomb Plot\" /> : <p>Loading plot...</p>}\n    </div>\n  );\n};\n\nexport default Honeycomb;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC,UAAU;EAAEC,YAAY;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,gBAAgB,EAAE;UAAEC,IAAI,EAAET,UAAU;UAAEU,MAAM,EAAET,YAAY;UAAEU,IAAI,EAAET;QAAW,CAAC,EAAE;UAChHU,YAAY,EAAE,MAAM,CAAG;QACzB,CAAC,CAAC;QAEF,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACT,QAAQ,CAACU,IAAI,CAAC,EAAE;UAAEC,IAAI,EAAE;QAAY,CAAC,CAAC,CAAC;QACjFb,UAAU,CAACQ,GAAG,CAAC;MACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDb,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACN,UAAU,EAAEC,YAAY,EAAEC,UAAU,CAAC,CAAC;EAE1C,oBACEJ,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBrB,OAAO,gBAAGN,OAAA;MAAK4B,GAAG,EAAEtB,OAAQ;MAACuB,GAAG,EAAC;IAAgB;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG3B,OAAA;MAAAuB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEV,CAAC;AAACtB,EAAA,CA1BIJ,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}